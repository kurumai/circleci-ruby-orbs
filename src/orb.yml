version: 2.1

commands:
  bundle-install:
    description: "Setup bundle with cache"
    parameters:
      cache_key_prefix:
        type: string
        default: "v1-bundle"
        description: "Key prefix of cache"
      bundle_jobs:
        type: integer
        default: 4
        description: "Passed to `bundle install --jobs`"
      bundle_retry:
        type: integer
        default: 3
        description: "Passed to `bundle install --retry`"
      bundle_path:
        type: string
        default: "vendor/bundle"
        description: "Passed to `bundle install --path`"
      bundle_clean:
        type: boolean
        default: true
        description: " Whether run `bundle clean` after `bundle install`"
      restore_bundled_with:
        type: boolean
        default: true
        description: "Whether resolve bundler version difference between `Gemfile.lock` and pre-installed in CI"
    steps:
      - restore_cache:
          keys:
            - << parameters.cache_key_prefix >>-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Gemfile.lock" }}
            - << parameters.cache_key_prefix >>-{{ .Environment.CIRCLE_JOB }}
            - << parameters.cache_key_prefix >>

      - run:
          name: bundle install
          command: |
            set -xe

            bundle_install_args=" --jobs=<< parameters.bundle_jobs >> --retry=<< parameters.bundle_retry >> --path=<< parameters.bundle_path >>"
            bundle install $bundle_install_args

            <<# parameters.bundle_clean >>
            bundle clean
            <</ parameters.bundle_clean >>

            <<# parameters.restore_bundled_with >>
            gem install restore_bundled_with --no-document
            restore-bundled-with
            <</ parameters.restore_bundled_with >>

      - save_cache:
          key: << parameters.cache_key_prefix >>-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Gemfile.lock" }}
          paths:
            - << parameters.bundle_path >>

